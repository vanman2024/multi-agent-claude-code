# =============================================================================
# SYNAPSEAI DEVELOPMENT ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# Never commit .env files to version control

# =============================================================================
# 🚀 APPLICATION SETTINGS
# =============================================================================
NODE_ENV=development
APP_NAME=
APP_VERSION=1.0.0
DEBUG=true

# Development ports (adjust if conflicts occur)
FRONTEND_PORT=3002
BACKEND_PORT=8891
API_BASE_URL=http://localhost:8891

# =============================================================================
# 🗄️ DATABASE & SUPABASE
# =============================================================================
# Get these from: https://app.supabase.com/project/YOUR_PROJECT/settings/api
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=
SUPABASE_SERVICE_ROLE_KEY=
SUPABASE_PROJECT_ID=

# Database connection string (for direct connections)
DATABASE_URL=postgresql://postgres:password@db.your-project-id.supabase.co:5432/postgres

# =============================================================================
# 🔐 AUTHENTICATION
# =============================================================================
# JWT settings (Supabase handles most of this)
JWT_SECRET=your-super-secret-jwt-key-here
JWT_EXPIRES_IN=7d

# OAuth providers (if using)
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# =============================================================================
# 🐙 GITHUB INTEGRATION
# =============================================================================
# GitHub Personal Access Token (classic)
# Scopes needed: repo, workflow, project, read:org, admin:repo_hook
GITHUB_TOKEN=ghp_your_github_personal_access_token_here

# GitHub organization and repository settings
GITHUB_OWNER=your-github-username-or-org
GITHUB_REPO=your-repo-name
GITHUB_PROJECT_NUMBER=1

# GitHub App credentials (if using GitHub App instead of PAT)
GITHUB_APP_ID=123456
GITHUB_APP_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\nYour private key here\n-----END RSA PRIVATE KEY-----"
GITHUB_APP_INSTALLATION_ID=12345678

# =============================================================================
# 🚀 DEPLOYMENT PLATFORMS
# =============================================================================

# Vercel (Frontend Deployment)
VERCEL_TOKEN=your-vercel-token
VERCEL_ORG_ID=team_your-team-id-or-user-id
VERCEL_PROJECT_ID=prj_your-project-id

# DigitalOcean (Backend Deployment)
DO_ACCESS_TOKEN=dop_v1_your-digitalocean-access-token
DO_DROPLET_ID=123456789
DO_SPACES_ACCESS_KEY=your-spaces-access-key
DO_SPACES_SECRET_KEY=your-spaces-secret-key
DO_SPACES_REGION=nyc3
DO_SPACES_BUCKET=your-bucket-name

# Docker Registry (for container deployments)
DOCKER_REGISTRY=ghcr.io
DOCKER_USERNAME=your-github-username
DOCKER_TOKEN=ghp_your_github_token_with_package_permissions

# =============================================================================
# 🤖 AI & ML SERVICES
# =============================================================================

# Anthropic Claude API
ANTHROPIC_API_KEY=sk-ant-api03-your-anthropic-api-key-here

# OpenAI API (if using)
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_ORG_ID=org-your-organization-id

# Other AI services
HUGGINGFACE_API_TOKEN=hf_your-huggingface-token
REPLICATE_API_TOKEN=r8_your-replicate-token

# =============================================================================
# 📧 COMMUNICATION & NOTIFICATIONS
# =============================================================================

# Email service (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
FROM_EMAIL=noreply@yourdomain.com

# Slack integration
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_CHANNEL_GENERAL=#general
SLACK_CHANNEL_DEPLOYS=#deployments
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Discord webhooks
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/webhook

# =============================================================================
# 🔍 MONITORING & ANALYTICS
# =============================================================================

# Sentry (Error tracking)
SENTRY_DSN=https://your-dsn@sentry.io/project-id
SENTRY_AUTH_TOKEN=your-sentry-auth-token
SENTRY_ORG=your-sentry-org
SENTRY_PROJECT=your-sentry-project

# Analytics
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX
POSTHOG_API_KEY=phc_your-posthog-key
MIXPANEL_TOKEN=your-mixpanel-token

# Uptime monitoring
UPTIME_ROBOT_API_KEY=ur-your-uptime-robot-api-key

# =============================================================================
# ☁️ CLOUD SERVICES
# =============================================================================

# AWS (if needed)
AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-s3-bucket

# Google Cloud (if needed)
GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json
GCP_PROJECT_ID=your-gcp-project-id

# =============================================================================
# 🧪 TESTING & DEVELOPMENT
# =============================================================================

# Test database (can be same as development)
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5432/synapseai_test

# Feature flags
FEATURE_NEW_UI=true
FEATURE_BETA_API=false
FEATURE_DEBUG_MODE=true

# External API testing
MOCK_EXTERNAL_APIS=false
API_RATE_LIMIT_PER_MINUTE=60

# =============================================================================
# 🔧 DEVELOPMENT TOOLS
# =============================================================================

# Code quality
ESLINT_CONFIG=.eslintrc.js
PRETTIER_CONFIG=.prettierrc

# Hot reloading
WATCHPACK_POLLING=true
FAST_REFRESH=true

# Build optimization
ANALYZE_BUNDLE=false
BUNDLE_ANALYZER=false

# =============================================================================
# 🌍 LOCALIZATION
# =============================================================================
DEFAULT_LOCALE=en
SUPPORTED_LOCALES=en,es,fr,de
TRANSLATION_SERVICE_API_KEY=your-translation-api-key

# =============================================================================
# 📱 MOBILE & PWA
# =============================================================================
PWA_ENABLED=true
PUSH_NOTIFICATIONS_VAPID_PUBLIC_KEY=your-vapid-public-key
PUSH_NOTIFICATIONS_VAPID_PRIVATE_KEY=your-vapid-private-key

# =============================================================================
# 🔒 SECURITY
# =============================================================================

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_REQUESTS_PER_HOUR=1000

# CORS settings
CORS_ORIGINS=http://localhost:3002,https://yourdomain.com
ALLOWED_HOSTS=localhost,yourdomain.com

# Content Security Policy
CSP_ENABLED=true
CSP_REPORT_URI=https://yourdomain.com/csp-report

# =============================================================================
# 🎯 FEATURE-SPECIFIC SETTINGS
# =============================================================================

# Git worktree management
WORKTREE_BASE_PATH=/home/gotime2022
PROJECT_BASE_NAME=devloop3

# Agent system
AGENT_MAX_CONCURRENT=3
AGENT_TIMEOUT_SECONDS=300
AGENT_DEBUG_MODE=true

# Project management
DEFAULT_SPRINT_LENGTH=14
AUTO_CREATE_MILESTONES=true
AUTO_ASSIGN_ISSUES=true

# Deployment
AUTO_DEPLOY_ON_MERGE=true
DEPLOYMENT_HEALTH_CHECK_URL=https://yourdomain.com/health
DEPLOYMENT_ROLLBACK_ON_ERROR=true

# =============================================================================
# 📊 LOGGING & DEBUGGING
# =============================================================================
LOG_LEVEL=debug
LOG_FORMAT=json
LOG_FILE_PATH=logs/app.log
LOG_MAX_SIZE=10MB
LOG_MAX_FILES=5

# Debug specific services
DEBUG_DATABASE=false
DEBUG_AUTH=false
DEBUG_DEPLOYMENT=false
DEBUG_GITHUB_API=true
DEBUG_AI_AGENTS=true

# =============================================================================
# 🌐 ENVIRONMENT-SPECIFIC OVERRIDES
# =============================================================================

# Staging environment
STAGING_API_URL=https://api-staging.yourdomain.com
STAGING_DATABASE_URL=postgresql://postgres:password@staging-db:5432/synapseai

# Production environment
PRODUCTION_API_URL=https://api.yourdomain.com
PRODUCTION_DATABASE_URL=postgresql://postgres:password@prod-db:5432/synapseai

# =============================================================================
# 💡 NOTES & INSTRUCTIONS
# =============================================================================

# How to get GitHub Token:
# 1. Go to GitHub Settings > Developer settings > Personal access tokens
# 2. Click "Generate new token (classic)"
# 3. Select scopes: repo, workflow, project, read:org, admin:repo_hook
# 4. Copy the token and paste it above

# How to get Supabase credentials:
# 1. Go to https://app.supabase.com/projects
# 2. Select your project > Settings > API
# 3. Copy the URL and anon key

# How to get Vercel token:
# 1. Go to Vercel Dashboard > Settings > Tokens
# 2. Create new token with appropriate scope
# 3. Copy the token

# How to get DigitalOcean token:
# 1. Go to DigitalOcean Control Panel > API
# 2. Generate new token with read/write scope
# 3. Copy the token

# Security reminders:
# - Never commit this file with real values
# - Use different secrets for each environment
# - Rotate tokens regularly
# - Use service accounts where possible
# - Enable 2FA on all accounts

