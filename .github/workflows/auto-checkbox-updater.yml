name: Auto Checkbox Updater

on:
  push:
    branches-ignore:
      - main  # Don't run on main branch commits

permissions:
  issues: write
  contents: read

jobs:
  update-checkboxes:
    runs-on: ubuntu-latest
    steps:
      - name: Update Issue Checkboxes Based on Commits
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üîç Analyzing commits for checkbox updates...');
            
            // Get the branch name
            const branch = context.ref.replace('refs/heads/', '');
            console.log(`Branch: ${branch}`);
            
            // Extract issue number from branch name (e.g., "126-fix-work-command")
            const issueMatch = branch.match(/^(\d+)-/);
            if (!issueMatch) {
              console.log('‚ùå No issue number found in branch name');
              return;
            }
            
            const issueNumber = parseInt(issueMatch[1]);
            console.log(`üìã Found issue number: ${issueNumber}`);
            
            // Get the issue
            let issue;
            try {
              const issueResponse = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber
              });
              issue = issueResponse.data;
            } catch (error) {
              console.log(`‚ùå Issue #${issueNumber} not found`);
              return;
            }
            
            // Get commit messages from the push
            const commits = context.payload.commits || [];
            if (commits.length === 0) {
              console.log('‚ùå No commits found');
              return;
            }
            
            console.log(`üìù Analyzing ${commits.length} commits...`);
            
            // Parse issue body for checkboxes
            const body = issue.body || '';
            const checkboxRegex = /^(\s*-)(\s*\[)([ x])(\]\s*)(.+)$/gm;
            let updatedBody = body;
            let updatedCount = 0;
            
            // Look for checkbox completion patterns in commit messages
            commits.forEach((commit, index) => {
              console.log(`Commit ${index + 1}: ${commit.message}`);
              
              // Patterns that indicate checkbox completion:
              // - "‚úÖ Completed: [checkbox text]"
              // - "feat: Add [something] - completes checkbox [text]"
              // - "fix: [something] ‚úÖ [checkbox text]"
              
              const completionPatterns = [
                /‚úÖ\s*(?:Completed?:?\s*)?(.+)/i,
                /completes?\s+checkbox:?\s*(.+)/i,
                /(?:feat|fix|docs|chore):\s*(.+?)\s*‚úÖ\s*(.+)/i,
                /checkbox\s*(?:complete|done):?\s*(.+)/i
              ];
              
              completionPatterns.forEach(pattern => {
                const match = commit.message.match(pattern);
                if (match) {
                  const completedText = match[1] || match[2];
                  console.log(`üéØ Found completion indicator: "${completedText}"`);
                  
                  // Find matching checkbox in issue body and mark as complete
                  const checkboxPattern = new RegExp(
                    `^(\\s*-)(\\s*\\[)([ ])(\\]\\s*)(.{0,100}${completedText.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}.{0,100})$`,
                    'mi'
                  );
                  
                  if (checkboxPattern.test(updatedBody)) {
                    updatedBody = updatedBody.replace(checkboxPattern, '$1$2x$4$5');
                    updatedCount++;
                    console.log(`‚úÖ Updated checkbox: ${completedText}`);
                  }
                }
              });
            });
            
            // If we updated any checkboxes, update the issue
            if (updatedCount > 0) {
              console.log(`üîÑ Updating ${updatedCount} checkboxes in issue #${issueNumber}`);
              
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: updatedBody
              });
              
              // Add a comment about the automatic update
              const commitShas = commits.map(c => c.id.substring(0, 7)).join(', ');
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `ü§ñ **Auto-updated ${updatedCount} checkbox${updatedCount > 1 ? 'es' : ''} from commits**
                
**Commits:** ${commitShas}

${commits.map(c => `- \`${c.id.substring(0, 7)}\` ${c.message}`).join('\n')}

*Updated via commit hook automation* ‚ö°`
              });
              
              console.log(`‚úÖ Successfully updated ${updatedCount} checkboxes`);
              
              // Trigger the existing issue checklist enforcer to update progress
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: issue.labels.map(l => l.name)  // Trigger label update to fire other hooks
              });
              
            } else {
              console.log('‚ÑπÔ∏è No checkbox completion patterns found in commits');
            }