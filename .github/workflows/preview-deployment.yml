name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '.claude/**'
      - 'docs/**'
      - 'templates/**'

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
        if: hashFiles('package.json') != ''
      
      - name: Install dependencies
        run: npm ci
        if: hashFiles('package.json') != ''
      
      - name: Run linting
        run: npm run lint
        if: hashFiles('package.json') != ''
        continue-on-error: true
      
      - name: Run type checking
        run: npm run typecheck
        if: hashFiles('package.json') != ''
        continue-on-error: true
      
      - name: Run tests
        run: npm test
        if: hashFiles('package.json') != ''
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
        if: hashFiles('requirements.txt') != ''
      
      - name: Install Python dependencies
        run: pip install -r requirements.txt
        if: hashFiles('requirements.txt') != ''
      
      - name: Run Python tests
        run: pytest
        if: hashFiles('requirements.txt') != ''

  preview-deploy:
    name: Deploy Preview to Vercel
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy to Vercel Preview
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Preview deployed to: $DEPLOYMENT_URL"
      
      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.url }}';
            const comment = `## 🚀 Preview Deployment Ready!
            
            Your preview deployment is available at: ${url}
            
            ### Deployment Details
            - **Environment**: Preview
            - **Branch**: \`${{ github.head_ref }}\`
            - **Commit**: \`${context.sha.substring(0, 7)}\`
            - **Tests**: ✅ All tests passed
            
            ### What's Deployed
            - ✅ Application code (src/, pages/, api/)
            - ✅ Static assets (public/)
            - ✅ Configuration files
            
            ### What's NOT Deployed
            - ❌ Framework files (.claude/, .github/)
            - ❌ Documentation (docs/, *.md)
            - ❌ Templates
            
            This preview will be automatically updated when you push new commits.`;
            
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });