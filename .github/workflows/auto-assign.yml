name: Auto Assign Issues and PRs

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]

jobs:
  auto-assign:
    runs-on: ubuntu-latest
    
    steps:
      - name: Auto assign issue to creator
        if: github.event_name == 'issues'
        uses: pozil/auto-assign-issue@v1
        with:
          assignees: ${{ github.event.issue.user.login }}
          
      - name: Add labels based on title
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.issue?.title || context.payload.pull_request?.title;
            const labels = [];
            
            // Add labels based on keywords in title
            if (title.includes('[BUG]')) labels.push('bug');
            if (title.includes('[FEATURE]')) labels.push('enhancement');
            if (title.includes('[DOCS]')) labels.push('documentation');
            if (title.includes('[URGENT]')) labels.push('priority:high');
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labels
              });
            }
            
      - name: Create branch for issue
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const branchName = `issue-${issue.number}-${issue.title.toLowerCase().replace(/[^a-z0-9]/g, '-').substring(0, 30)}`;
            
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/heads/${branchName}`,
                sha: context.payload.repository.default_branch
              });
              
              // Comment on issue with branch name
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `Branch \`${branchName}\` has been created for this issue.`
              });
            } catch (error) {
              console.log('Branch creation failed:', error);
            }