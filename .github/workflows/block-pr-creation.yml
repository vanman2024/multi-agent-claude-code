name: Block PR Without Issue

on:
  pull_request:
    types: [opened]

permissions:
  pull-requests: write
  issues: read

jobs:
  check-linked-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Check Linked Issue Completion
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Extract issue number from PR body (Closes #123, Fixes #123, etc.)
            const issueRegex = /(?:closes?|fixes?|resolves?)\s+#(\d+)/gi;
            const issueMatches = [...body.matchAll(issueRegex)];
            
            if (issueMatches.length === 0) {
              console.log('No linked issue found - allowing PR');
              return;
            }
            
            // Check each linked issue
            for (const match of issueMatches) {
              const issueNumber = parseInt(match[1]);
              
              try {
                const issue = await github.rest.issues.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber
                });
                
                const issueBody = issue.data.body || '';
                
                // Count checkboxes in issue
                const checkboxRegex = /- \[([ x])\]/gi;
                const boxes = [...issueBody.matchAll(checkboxRegex)];
                const total = boxes.length;
                const checked = boxes.filter(m => m[1].toLowerCase() === 'x').length;
                
                if (total > 0 && checked < total) {
                  // Issue has unchecked boxes - warn or fail
                  const message = `⚠️ **Warning: Linked issue #${issueNumber} has incomplete tasks!**
                  
**Issue Progress:** ${checked}/${total} checkboxes (${Math.round((checked/total)*100)}%)
**Remaining Tasks:** ${total - checked}

Please complete all tasks in the issue before creating the PR, or explain why they're not needed.`;
                  
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    body: message
                  });
                  
                  // Add warning label
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    labels: ['incomplete-issue']
                  });
                }
              } catch (error) {
                console.log(`Could not check issue #${issueNumber}: ${error.message}`);
              }
            }