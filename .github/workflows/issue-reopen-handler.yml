name: Issue Reopen Handler

on:
  issues:
    types: [reopened]
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: read

jobs:
  handle-reopened-issue:
    if: github.event_name == 'issues' && github.event.action == 'reopened'
    runs-on: ubuntu-latest
    steps:
      - name: Add reopened labels
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.issue;
            const body = context.payload.issue.body || '';
            
            // Check if this is a bug fix or enhancement
            const labels = [];
            
            // Always add needs-fix label for reopened issues
            labels.push('needs-fix');
            
            // Check existing labels
            const existingLabels = context.payload.issue.labels.map(l => l.name);
            
            // If it was previously closed as completed but didn't work
            if (existingLabels.includes('bug') || body.includes('still broken') || body.includes('not working')) {
              labels.push('bug');
            }
            
            // If it needs additional features
            if (body.includes('need to add') || body.includes('missing feature')) {
              labels.push('enhancement');
            }
            
            // Add labels
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                ...issue,
                labels: labels
              });
            }
            
            // Add comment explaining the reopen
            await github.rest.issues.createComment({
              ...issue,
              body: `## ðŸ”„ Issue Reopened
              
This issue has been reopened for additional work. 

**Labels Applied:**
${labels.map(l => `- \`${l}\``).join('\n')}

**Next Steps:**
1. Review what was incomplete or broken
2. Update acceptance criteria if needed
3. Create new branch from latest main
4. Implement fixes/enhancements
5. Create new PR referencing this issue`
            });

  detect-reopen-command:
    if: |
      github.event_name == 'issue_comment' && 
      github.event.issue.state == 'closed' &&
      (contains(github.event.comment.body, '/reopen') || 
       contains(github.event.comment.body, 'still broken') ||
       contains(github.event.comment.body, 'not fixed'))
    runs-on: ubuntu-latest
    steps:
      - name: Check if should reopen
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.issue;
            const comment = context.payload.comment;
            const commenter = comment.user.login;
            
            // Check if commenter has permission (author, collaborator, or owner)
            const issueAuthor = context.payload.issue.user.login;
            const isAuthor = commenter === issueAuthor;
            
            // Check if collaborator
            let isCollaborator = false;
            try {
              await github.rest.repos.checkCollaborator({
                owner: issue.owner,
                repo: issue.repo,
                username: commenter
              });
              isCollaborator = true;
            } catch (e) {
              // Not a collaborator
            }
            
            if (isAuthor || isCollaborator) {
              // Reopen the issue
              await github.rest.issues.update({
                ...issue,
                state: 'open'
              });
              
              // Determine labels based on comment
              const labels = ['needs-fix'];
              if (comment.body.includes('bug') || comment.body.includes('broken')) {
                labels.push('bug');
              }
              if (comment.body.includes('feature') || comment.body.includes('enhancement')) {
                labels.push('enhancement');
              }
              
              // Add labels
              await github.rest.issues.addLabels({
                ...issue,
                labels: labels
              });
              
              // Add confirmation comment
              await github.rest.issues.createComment({
                ...issue,
                body: `âœ… Issue reopened by @${commenter}
                
This issue needs additional work. Please review the latest comments for context.`
              });
            } else {
              // No permission to reopen
              await github.rest.issues.createComment({
                ...issue,
                body: `@${commenter} - You don't have permission to reopen this issue. Please ask a maintainer or the original author (@${issueAuthor}) to reopen it if needed.`
              });
            }