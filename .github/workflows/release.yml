name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: prev_tag
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "previous_tag=${PREV_TAG}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          if [ -z "${{ steps.prev_tag.outputs.previous_tag }}" ]; then
            echo "First release! ðŸŽ‰" > release_notes.md
          else
            echo "## What's Changed" > release_notes.md
            echo "" >> release_notes.md
            git log ${{ steps.prev_tag.outputs.previous_tag }}..HEAD --pretty=format:"- %s" >> release_notes.md
          fi
          
      - name: Check if prerelease
        id: check_prerelease
        run: |
          if [[ "${{ github.ref_name }}" == *"-"* ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ steps.check_prerelease.outputs.prerelease }}

      - name: Update milestone
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            
            // Find milestone matching this version
            const milestones = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            const milestone = milestones.data.find(m => m.title.includes(tag));
            if (milestone) {
              // Close the milestone
              await github.rest.issues.updateMilestone({
                owner: context.repo.owner,
                repo: context.repo.repo,
                milestone_number: milestone.number,
                state: 'closed'
              });
              console.log(`Closed milestone: ${milestone.title}`);
            }