#!/bin/bash
# Setup Git Hooks for Professional Commit Strategy
# Installs the pre-push hook for commit accumulation guidance

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TEMPLATE_DIR="$(dirname "$(dirname "$SCRIPT_DIR")")"

echo "üîß Setting up Git hooks for professional workflow..."

# Ensure .git/hooks directory exists
mkdir -p .git/hooks

# Use Git's sample hooks as the base and add our customizations
if [ -f "$TEMPLATE_DIR/templates/git/hooks/pre-push.template" ]; then
    cp "$TEMPLATE_DIR/templates/git/hooks/pre-push.template" .git/hooks/pre-push
    chmod +x .git/hooks/pre-push
    echo "‚úÖ Professional pre-push hook installed (based on Git sample)"
elif [ -f ".git/hooks/pre-push.sample" ]; then
    echo "‚ö†Ô∏è  Using local Git sample hook..."
    # Use local Git sample and add minimal guidance
    cp .git/hooks/pre-push.sample .git/hooks/pre-push
    
    # Add our guidance to the existing sample
    sed -i '/^exit 0$/i\\n# Professional Commit Strategy Guidance\nBRANCH=$(git rev-parse --abbrev-ref HEAD)\nif [ "$BRANCH" = "main" ]; then\n    UNPUSHED_COUNT=$(git rev-list --count @{upstream}..HEAD 2>/dev/null || echo 0)\n    if [ "$UNPUSHED_COUNT" -le 1 ]; then\n        echo "üí° Consider accumulating 3-6 commits for richer release notes"\n        read -t 2 -p "Continue? " || true\n        echo ""\n    fi\nfi\n' .git/hooks/pre-push
    
    chmod +x .git/hooks/pre-push
    echo "‚úÖ Git sample hook customized with commit guidance"
else
    echo "‚ö†Ô∏è  No hook templates found, skipping hook installation"
fi

# Verify hook is working
if [ -x .git/hooks/pre-push ]; then
    echo "‚úÖ Git hooks setup complete!"
    echo ""
    echo "üìã Professional commit workflow enabled:"
    echo "  ‚Ä¢ Guidance for commit accumulation on main branch"
    echo "  ‚Ä¢ Use './scripts/git/push-bypass' for quick testing"
    echo "  ‚Ä¢ Use 'git push --no-verify' to bypass hook"
else
    echo "‚ùå Failed to setup git hooks"
    exit 1
fi