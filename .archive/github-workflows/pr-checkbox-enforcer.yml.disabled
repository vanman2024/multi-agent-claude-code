name: PR Checkbox Enforcer

on:
  pull_request:
    types: [opened, edited, synchronize, ready_for_review]
  pull_request_review:
    types: [submitted]

permissions:
  pull-requests: write
  statuses: write
  checks: write

jobs:
  check-pr-checkboxes:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Template Compliance
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Extract all checkboxes from PR body
            const checkboxRegex = /- \[([ x])\]/gi;
            const matches = body.matchAll(checkboxRegex);
            
            let totalBoxes = 0;
            let checkedBoxes = 0;
            let uncheckedRequired = [];
            
            for (const match of matches) {
              totalBoxes++;
              if (match[1].toLowerCase() === 'x') {
                checkedBoxes++;
              } else {
                // Find the text after the checkbox to identify what's missing
                const lineStart = body.lastIndexOf('\n', match.index) + 1;
                const lineEnd = body.indexOf('\n', match.index);
                const line = body.substring(lineStart, lineEnd === -1 ? undefined : lineEnd);
                
                // Check if it's a required checkbox (under Required Checks section)
                if (body.substring(Math.max(0, match.index - 200), match.index).includes('Required Checks')) {
                  uncheckedRequired.push(line.trim());
                }
              }
            }
            
            // Create status check
            const checkName = 'PR Checklist Completion';
            const sha = pr.head.sha;
            
            if (totalBoxes === 0) {
              // No checkboxes found - PR template not used
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: checkName,
                head_sha: sha,
                status: 'completed',
                conclusion: 'failure',
                output: {
                  title: 'PR Template Not Used',
                  summary: '❌ Please use the PR template and fill out all required checkboxes.',
                  text: 'This PR does not appear to use the standard PR template. Please update the PR description with the template.'
                }
              });
              
              core.setFailed('PR template not used');
              return;
            }
            
            const completionRate = (checkedBoxes / totalBoxes * 100).toFixed(1);
            
            if (uncheckedRequired.length > 0) {
              // Required checkboxes not complete
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: checkName,
                head_sha: sha,
                status: 'completed',
                conclusion: 'failure',
                output: {
                  title: `Required Checkboxes Incomplete (${checkedBoxes}/${totalBoxes})`,
                  summary: `❌ ${uncheckedRequired.length} required checkbox(es) not checked. Completion: ${completionRate}%`,
                  text: `### Unchecked Required Items:\n${uncheckedRequired.map(item => `- ${item}`).join('\n')}\n\n**All required checkboxes must be checked before this PR can be merged.**`
                }
              });
              
              // Add comment if this is the first check
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number
              });
              
              const botComment = comments.data.find(c => 
                c.user.type === 'Bot' && 
                c.body.includes('PR Checklist Status')
              );
              
              const commentBody = `## 📋 PR Checklist Status
              
**Completion:** ${checkedBoxes}/${totalBoxes} (${completionRate}%)
              
### ❌ Required items not checked:
${uncheckedRequired.map(item => `- ${item}`).join('\n')}
              
**This PR cannot be merged until all required checkboxes are checked.**`;
              
              if (!botComment) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: commentBody
                });
              } else {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: commentBody
                });
              }
              
              core.setFailed(`Required checkboxes incomplete: ${uncheckedRequired.length} items`);
            } else if (checkedBoxes === totalBoxes) {
              // All checkboxes complete!
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: checkName,
                head_sha: sha,
                status: 'completed',
                conclusion: 'success',
                output: {
                  title: `All Checkboxes Complete (${checkedBoxes}/${totalBoxes})`,
                  summary: `✅ All ${totalBoxes} checkboxes are checked! PR checklist requirements met.`,
                  text: 'Great job! All PR requirements have been acknowledged and completed.'
                }
              });
              
              console.log(`✅ All ${totalBoxes} checkboxes checked`);
            } else {
              // Some optional boxes unchecked but required ones done
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: checkName,
                head_sha: sha,
                status: 'completed',
                conclusion: 'success',
                output: {
                  title: `Required Checkboxes Complete (${checkedBoxes}/${totalBoxes})`,
                  summary: `✅ All required checkboxes checked. Optional items: ${completionRate}% complete.`,
                  text: 'Required checkboxes are complete. Some optional items remain unchecked.'
                }
              });
              
              console.log(`✅ Required checkboxes complete (${checkedBoxes}/${totalBoxes} total)`);
            }