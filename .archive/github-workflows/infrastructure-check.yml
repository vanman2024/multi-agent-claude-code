name: Infrastructure Dependency Check

on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, ready_for_review]

permissions:
  issues: write
  pull-requests: write
  checks: write

jobs:
  check-infrastructure:
    name: Verify Infrastructure Prerequisites
    runs-on: ubuntu-latest
    
    steps:
      - name: Check for blocking infrastructure issues
        id: check-blockers
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get all open infrastructure issues with blocking label
            const { data: blockingIssues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'infrastructure,blocking',
              state: 'open'
            });
            
            console.log(`Found ${blockingIssues.length} blocking infrastructure issues`);
            
            // Check if current issue/PR is infrastructure-related
            let isInfrastructure = false;
            let currentItem = null;
            
            if (context.eventName === 'issues') {
              currentItem = context.payload.issue;
              isInfrastructure = currentItem.labels.some(l => 
                l.name === 'infrastructure' || l.name === 'blocking'
              );
            } else if (context.eventName === 'pull_request') {
              currentItem = context.payload.pull_request;
              isInfrastructure = currentItem.labels?.some(l => 
                l.name === 'infrastructure'
              ) || false;
            }
            
            core.setOutput('has_blockers', blockingIssues.length > 0);
            core.setOutput('blocker_count', blockingIssues.length);
            core.setOutput('is_infrastructure', isInfrastructure);
            core.setOutput('blockers', JSON.stringify(blockingIssues.map(i => ({
              number: i.number,
              title: i.title,
              url: i.html_url
            }))));
      
      - name: Block non-infrastructure work
        if: |
          steps.check-blockers.outputs.has_blockers == 'true' && 
          steps.check-blockers.outputs.is_infrastructure == 'false' &&
          github.event_name == 'issues' &&
          (contains(github.event.issue.labels.*.name, 'feature') || 
           contains(github.event.issue.labels.*.name, 'enhancement'))
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const blockers = JSON.parse('${{ steps.check-blockers.outputs.blockers }}');
            
            // Add blocking label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['blocked']
            });
            
            // Add detailed comment
            const comment = `## ðŸš§ Infrastructure Prerequisites Required
            
            This feature cannot be developed until the following infrastructure components are in place:
            
            ${blockers.map(b => `- [ ] #${b.number}: ${b.title}`).join('\n')}
            
            ### Why is this blocked?
            Infrastructure components must be established first to ensure:
            - Database schemas are defined
            - Authentication is configured
            - API endpoints are available
            - Storage buckets are created
            - CI/CD pipelines are ready
            
            ### What can you do?
            1. Help complete the infrastructure issues listed above
            2. Review and provide feedback on infrastructure PRs
            3. Plan and document this feature while waiting
            
            This issue will be automatically unblocked once all infrastructure prerequisites are completed.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
      
      - name: Add infrastructure tracking
        if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'infrastructure')
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Add special tracking for infrastructure issues
            const issue = context.payload.issue;
            
            // Check if this completes all infrastructure
            const { data: remainingInfra } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'infrastructure,blocking',
              state: 'open'
            });
            
            // Filter out current issue
            const othersRemaining = remainingInfra.filter(i => i.number !== issue.number);
            
            if (othersRemaining.length === 0) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `ðŸŽ¯ **Critical Infrastructure Issue**\n\nThis is the last remaining infrastructure blocker! Once this is completed, all feature development can proceed.`
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `ðŸ“Š **Infrastructure Progress**\n\nAfter this issue, ${othersRemaining.length} infrastructure item(s) will remain:\n${othersRemaining.map(i => `- #${i.number}: ${i.title}`).join('\n')}`
              });
            }

  check-pr-prerequisites:
    name: Verify PR Can Proceed
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Check infrastructure status
        id: infra-check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            
            // Check for blocking infrastructure issues
            const { data: blockingIssues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'infrastructure,blocking',
              state: 'open'
            });
            
            const hasBlockers = blockingIssues.length > 0;
            
            // Check if PR is infrastructure-related
            const isInfraPR = pr.labels?.some(l => l.name === 'infrastructure') || 
                             pr.title.toLowerCase().includes('infrastructure') ||
                             pr.title.toLowerCase().includes('infra');
            
            if (hasBlockers && !isInfraPR) {
              // Create a check run showing blocked status
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'Infrastructure Prerequisites',
                head_sha: pr.head.sha,
                status: 'completed',
                conclusion: 'neutral',
                output: {
                  title: 'Blocked by Infrastructure',
                  summary: `This PR is blocked by ${blockingIssues.length} infrastructure issue(s)`,
                  text: `The following infrastructure must be completed first:\n\n${blockingIssues.map(i => `- #${i.number}: ${i.title}`).join('\n')}`
                }
              });
            } else {
              // Create a check run showing ready status
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'Infrastructure Prerequisites',
                head_sha: pr.head.sha,
                status: 'completed',
                conclusion: 'success',
                output: {
                  title: 'Ready to Proceed',
                  summary: isInfraPR ? 'Infrastructure PR - no prerequisites required' : 'All infrastructure prerequisites met'
                }
              });
            }